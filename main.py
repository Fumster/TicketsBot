import telebot
from telebot import types
from telebot.apihelper import ApiTelegramException
import re


channel_id = ""


def initialise_bot():
    bot = telebot.TeleBot()

    @bot.message_handler(commands=['add'])
    def add_command_handler(message):
        bot.delete_message(message.chat.id, message.id)
        send = bot.send_message(message.chat.id, '–î–æ–±–∞–≤—å –∑–∞—è–≤–∫—É:')
        bot.register_next_step_handler(send, add_issue)

    def add_issue(message):
        bot.delete_message(message.chat.id, message.id)
        if len(message.text) < 10:
            bot.send_message(message.chat.id, "–∑–∞—è–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤")
        else:
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn1 = types.InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å",callback_data="accept")
            markup.add(btn1)
            msg_id = bot.send_message(channel_id, f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #XXX\n–ê–≤—Ç–æ—Ä:{message.from_user.username}\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:{message.text}', reply_markup=markup).id
            bot.edit_message_text(f'‚ö†Ô∏è–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{msg_id}\n–ê–≤—Ç–æ—Ä:{message.from_user.username}\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:{message.text}',channel_id, msg_id, reply_markup=markup)
            bot.send_message(message.chat.id, f"–∑–∞—è–≤–∫–∞ #{msg_id} –¥–æ–±–∞–≤–ª–µ–Ω–∞")

    @bot.message_handler(commands=['close'])
    def close_handler(message):
        bot.delete_message(message.chat.id, message.id)
        send = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:')
        bot.register_next_step_handler(send, close_issue)

    def close_issue(message):
        try:
            bot.delete_message(message.chat.id, message.id)
            msg_id = int(message.text)
        except ValueError:
            bot.send_message(message.chat.id, "ID –∑–∞—è–≤–∫–∏ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã")
            return

        ch_message = bot.forward_message(message.chat.id, channel_id, msg_id)
        bot.delete_message(message.chat.id, ch_message.id)
        content = ch_message.text.split("–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: ")[1]
        try:
            bot.edit_message_text(f"‚òëÔ∏è–∑–∞—è–≤–∫–∞ #{msg_id} –∑–∞–∫—Ä—ã—Ç–∞ - {message.from_user.username}\n--{content}--\n", channel_id, msg_id)
        except ApiTelegramException as e:
            print(e)
            bot.send_message(message.chat.id, "–∑–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        bot.send_message(message.chat.id, f"–∑–∞—è–≤–∫–∞ #{msg_id} –∑–∞–∫—Ä—ã—Ç–∞")

    @bot.message_handler(content_types=['text'])
    def get_text_messages(message):

        if not message.text == "add" or "close":
            bot.send_message(message.from_user.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')  # –æ—Ç–≤–µ—Ç –±–æ—Ç–∞

    @bot.callback_query_handler(func=lambda callback: callback.data == 'accept')
    def accept_ticket(callback):
        content = callback.message.text.split("–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:")[1]
        bot.edit_message_text(f"üü®–∑–∞—è–≤–∫–∞ #{callback.message.id} –≤ —Ä–∞–±–æ—Ç–µ - {callback.from_user.username}\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {content}", channel_id, callback.message.id)
        bot.forward_message(callback.from_user.id, channel_id, callback.message.id)

    bot.polling(none_stop=True, interval=0)

if __name__ == '__main__':
    initialise_bot()

